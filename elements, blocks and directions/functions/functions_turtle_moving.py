'''


Группа биологов в институте биоинформатики завела себе черепашку.

После дрессировки черепашка научилась понимать и запоминать указания биологов следующего вида:
север 10
запад 20
юг 30
восток 40
где первое слово — это направление, в котором должна двигаться черепашка, а число после слова — это положительное расстояние в сантиметрах, которое должна пройти черепашка.

Но команды даются быстро, а черепашка ползёт медленно, и программисты догадались, что можно написать программу, которая определит, куда в итоге биологи приведут черепашку. Для этого программисты просят вас написать программу, которая выведет точку, в которой окажется черепашка после всех команд. Для простоты они решили считать, что движение начинается в точке (0, 0), и движение на восток увеличивает первую координату, а на север — вторую.

Программе подаётся на вход число команд n n n, которые нужно выполнить черепашке, после чего n n n строк с самими командами. Вывести нужно два числа в одну строку: первую и вторую координату конечной точки черепашки. Все координаты целочисленные.

Sample Input:

4
север 10
запад 20
юг 30
восток 40

Sample Output:

20 -20



'''
def moves(commands):
	position = [0, 0]
	for step in commands:
		kx = 0
		ky = 0
	
		if step[0] == 'восток':
			kx = 1
		elif step[0] == 'запад':
			kx = -1
		elif step[0] == 'север':
			ky = 1
		elif step[0] == 'юг':
			ky = -1				
	
		position[0] += kx * int(step[1])
		position[1] += ky * int(step[1])
	
	return position
	
	

n = int(input())

directions = {'север', 'юг', 'запад', 'восток'}
kx = 0
ky = 0
commands = []
pos = [0, 0]

for i in range(n):
	commands.append(input().lower().strip().split())


pos = moves(commands)
	
print(*pos)
