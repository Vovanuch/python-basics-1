'''

–ê–≤–µ, –¶–µ–∑–∞—Ä—å üå∂Ô∏è

–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ, –≤ –∫–æ—Ç–æ—Ä–æ–π –Ω—É–∂–Ω–æ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å –≤—Å–µ —Å–ª–æ–≤–∞. –ö–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ —Å—Ç—Ä–æ–∫–∏ —Å–ª–µ–¥—É–µ—Ç –∑–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Å –ø–æ–º–æ—â—å—é —à–∏—Ñ—Ä–∞ –¶–µ–∑–∞—Ä—è (—Ü–∏–∫–ª–∏—á–µ—Å–∫–æ–≥–æ —Å–¥–≤–∏–≥–∞ –Ω–∞ –¥–ª–∏–Ω—É —ç—Ç–æ–≥–æ —Å–ª–æ–≤–∞). –°—Ç—Ä–æ—á–Ω—ã–µ –±—É–∫–≤—ã –ø—Ä–∏ —ç—Ç–æ–º –æ—Å—Ç–∞—é—Ç—Å—è —Å—Ç—Ä–æ—á–Ω—ã–º–∏, –∞ –ø—Ä–æ–ø–∏—Å–Ω—ã–µ ‚Äì –ø—Ä–æ–ø–∏—Å–Ω—ã–º–∏.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö 
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —É—Å–ª–æ–≤–∏–µ–º –∑–∞–¥–∞—á–∏.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –°–∏–º–≤–æ–ª—ã, –Ω–µ —è–≤–ª—è—é—â–∏–µ—Å—è –∞–Ω–≥–ª–∏–π—Å–∫–∏–º–∏ –±—É–∫–≤–∞–º–∏, –Ω–µ –∏–∑–º–µ–Ω—è—é—Ç—Å—è.

Sample Input 1:

Day, mice. "Year" is a mistake!

Sample Output 1:

Gdb, qmgi. "Ciev" ku b tpzahrl!

Sample Input 2:

my name is Python!

Sample Output 2:

oa reqi ku Veznut!

'''

# –°–∞–º–∞ —Ñ—É–Ω–∫—Ü–∏—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è
def cesar_gen(my_text, all_symbols, key):
    secret_text = ''
    for c in my_text.lower():
        if c in all_symbols.lower():
            
            i = all_symbols.lower().index(c)
            ciph_i = (i + key) % len(all_symbols)
            secret_text += all_symbols.lower()[ciph_i]
        else:
            secret_text += c
        
    
    return secret_text
    
# –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∑–∞–≥–ª–∞–≤–Ω—ã—Ö –≤ –∑–∞–≥–ª–∞–≤–Ω—ã–µ, —Å—Ç—Ä–æ—á–Ω—ã—Ö –≤ —Å—Ç—Ä–æ—á–Ω—ã–µ
def set_up_low_char(open_str, sec_str):
    res = ''
    for i in range(len(open_str)):
        #print(open_str[i], sec_str[i])
        if open_str[i].upper() == open_str[i]:
            res += sec_str[i].upper()
            #print(res)
        else:
            res += sec_str[i]
            
    return res


# –ø–æ–¥—Å—á—ë—Ç –±—É–∫–≤ –≤ —Å–ª–æ–≤–µ (–±–µ–∑ —Ü–∏—Ñ—Ä –∏ –∑–Ω–∞–∫–æ–≤ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è)
def count_alphas(my_word, alphabet):
    count = 0
    for c in my_word:
        if c.lower() in alphabet:
            count += 1
            #print(count)
    
    return count

alphabet_en = 'abcdefghijklmnopqrstuvwxyz' # –°—Ç—Ä–æ—á–Ω—ã–µ –±—É–∫–≤—ã

print('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è:')
text = input()

# —à–∏—Ñ—Ä—É–µ–º –∫–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ –≤–æ –≤–≤–µ–¥—ë–Ω–Ω–º —Ç–µ–∫—Å—Ç–µ. –ü–û—Å–ª–µ —ç—Ç–æ–≥–æ –≤—ã–≤–æ–¥–∏–º –µ–≥–æ.
for word in text.split():
    result_word = set_up_low_char(word, cesar_gen(word, alphabet_en, count_alphas(word, alphabet_en)))
    print(result_word, end=' ')
