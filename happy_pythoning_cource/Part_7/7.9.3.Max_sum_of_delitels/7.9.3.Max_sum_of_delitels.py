'''

–î–µ–ª–∏—Ç–µ–ª–∏-1 üå∂Ô∏è

–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è –¥–≤–∞ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–ª–∞ aaa –∏ bbb (a< ba < ba< b). –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Ö–æ–¥–∏—Ç –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –∏–∑ –æ—Ç—Ä–µ–∑–∫–∞ [a;‚Äâb][a; \, b][a;b] —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º–æ–π –¥–µ–ª–∏—Ç–µ–ª–µ–π.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—é—Ç—Å—è –¥–≤–∞ —á–∏—Å–ª–∞, –∫–∞–∂–¥–æ–µ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –¥–≤–∞ —á–∏—Å–ª–∞ –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–º: —á–∏—Å–ª–æ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º–æ–π –¥–µ–ª–∏—Ç–µ–ª–µ–π –∏ —Å—É–º–º—É –µ–≥–æ –¥–µ–ª–∏—Ç–µ–ª–µ–π.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –ï—Å–ª–∏ —Ç–∞–∫–∏—Ö —á–∏—Å–µ–ª –Ω–µ—Å–∫–æ–ª—å–∫–æ, —Ç–æ –≤—ã–≤–µ–¥–∏—Ç–µ –Ω–∞–∏–±–æ–ª—å—à–µ–µ –∏–∑ –Ω–∏—Ö.

Sample Input 1:

1
10

Sample Output 1:

10 18

Sample Input 2:

1
100

Sample Output 2:

96 252

'''
# function of finding summ of delitels
def summ_of_delitels(n, list_of_sums):
    s = 0
    for i in range(1, n+1):
        if (n % i) == 0:
            s += i
    # append lists of numbers and sums
    list_of_sums.append(s)

a = int(input().strip())
b = int(input().strip())

# generate lists
list_of_nums = [i for i in range(a, b+1)]
list_of_sums = []

# finding sums and fill list 
for i in range(a, b+1):
    summ_of_delitels(i, list_of_sums)

# reverse lists to start from largest
list_of_nums.reverse()
list_of_sums.reverse()

# finding max of sums, position, and position of number
max_s = max(list_of_sums)
pos_s = list_of_sums.index(max_s)
max_n = list_of_nums[pos_s]
print(max_n, max_s)